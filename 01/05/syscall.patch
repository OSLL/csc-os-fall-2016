diff -u --new-file xv6-public/gdtinfo.c tmp/xv6-public/gdtinfo.c
--- xv6-public/gdtinfo.c	1970-01-01 03:00:00.000000000 +0300
+++ tmp/xv6-public/gdtinfo.c	2016-12-13 00:51:34.243132801 +0300
@@ -0,0 +1,30 @@
+#include "types.h"
+#include "stat.h"
+#include "user.h"
+
+int main() 
+{
+	struct segdesc* gdt;
+	int num = NSEGS;	
+	user(&gdt);
+
+	for(int i = 1; i < num; ++i)
+	{
+		printf(1, "Segment number = %d\n", i);
+		printf(1, "Low bits of segment limit = %d\n", gdt[i].lim_15_0);
+		printf(1, "Low bits of segment base address = %d\n", gdt[i].base_15_0);				
+		printf(1, "Middle bits of segment base address = %d\n", gdt[i].base_23_16);
+		printf(1, "Segment type = %d\n", gdt[i].type);
+		printf(1, "s(0 = system, 1 = application) = %d\n", gdt[i].s);
+		printf(1, "Descriptor Privilege Level = %d\n", gdt[i].dpl);
+		printf(1, "Present = %d\n", gdt[i].p);
+		printf(1, "High bits of segment limit = %d\n", gdt[i].lim_19_16);
+		printf(1, "avl(Unused (available for software use)) = %d\n", gdt[i].avl);
+		printf(1, "s(0 = system, 1 = application) = %d\n", gdt[i].s);
+		printf(1, "rsv1(Reserved) = %d\n", gdt[i].rsv1);
+		printf(1, "db(0 = 16-bit segment, 1 = 32-bit segment) = %d\n", gdt[i].db); 	
+		printf(1, "Granularity: limit scaled by 4K when set = %d\n", gdt[i].g);
+		printf(1, "High bits of segment base address = %d\n\n", gdt[i].base_31_24);
+	}
+	exit();
+}
Общие подкаталоги: xv6-public/.git и tmp/xv6-public/.git
diff -u --new-file xv6-public/Makefile tmp/xv6-public/Makefile
--- xv6-public/Makefile	2016-12-13 00:45:35.543139224 +0300
+++ tmp/xv6-public/Makefile	2016-12-13 00:25:36.391160699 +0300
@@ -167,6 +167,7 @@
 	_ln\
 	_ls\
 	_mkdir\
+	_gdtinfo\
 	_rm\
 	_sh\
 	_stressfs\
@@ -242,7 +243,7 @@
 EXTRA=\
 	mkfs.c ulib.c user.h cat.c echo.c forktest.c grep.c kill.c\
 	ln.c ls.c mkdir.c rm.c stressfs.c usertests.c wc.c zombie.c\
-	printf.c umalloc.c\
+	printf.c umalloc.c gdtinfo.c\
 	README dot-bochsrc *.pl toc.* runoff runoff1 runoff.list\
 	.gdbinit.tmpl gdbutil\
 
diff -u --new-file xv6-public/syscall.c tmp/xv6-public/syscall.c
--- xv6-public/syscall.c	2016-12-13 00:45:35.543139224 +0300
+++ tmp/xv6-public/syscall.c	2016-12-13 00:25:36.391160699 +0300
@@ -98,6 +98,7 @@
 extern int sys_wait(void);
 extern int sys_write(void);
 extern int sys_uptime(void);
+extern int sys_user(void);
 
 static int (*syscalls[])(void) = {
 [SYS_fork]    sys_fork,
@@ -121,6 +122,7 @@
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
+[SYS_user]    sys_user,
 };
 
 void
diff -u --new-file xv6-public/syscall.h tmp/xv6-public/syscall.h
--- xv6-public/syscall.h	2016-12-13 00:45:35.543139224 +0300
+++ tmp/xv6-public/syscall.h	2016-12-13 00:25:36.335160700 +0300
@@ -20,3 +20,4 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+#define SYS_user 22
diff -u --new-file xv6-public/sysproc.c tmp/xv6-public/sysproc.c
--- xv6-public/sysproc.c	2016-12-13 00:45:35.543139224 +0300
+++ tmp/xv6-public/sysproc.c	2016-12-13 00:25:36.335160700 +0300
@@ -89,3 +89,16 @@
   release(&tickslock);
   return xticks;
 }
+
+
+int 
+sys_user(void) 
+{
+	struct segdesc* gdt;
+	
+	if (argptr(0, (void*)&gdt, NSEGS *sizeof(struct segdesc*)) < 0) {
+		return -1;
+	}
+	gdt = cpus[0].gdt;
+	return 0;
+}
diff -u --new-file xv6-public/user.h tmp/xv6-public/user.h
--- xv6-public/user.h	2016-12-13 00:45:35.543139224 +0300
+++ tmp/xv6-public/user.h	2016-12-13 00:25:36.391160699 +0300
@@ -1,3 +1,4 @@
+#include "mmu.h"
 struct stat;
 struct rtcdate;
 
@@ -23,6 +24,7 @@
 char* sbrk(int);
 int sleep(int);
 int uptime(void);
+int user(struct segdesc**);
 
 // ulib.c
 int stat(char*, struct stat*);
diff -u --new-file xv6-public/usys.S tmp/xv6-public/usys.S
--- xv6-public/usys.S	2016-12-13 00:45:35.543139224 +0300
+++ tmp/xv6-public/usys.S	2016-12-13 00:25:36.335160700 +0300
@@ -29,3 +29,4 @@
 SYSCALL(sbrk)
 SYSCALL(sleep)
 SYSCALL(uptime)
+SYSCALL(user)
