diff -u --new-file xv6-test/xv6-public/gdtinfo.c xv6-public/gdtinfo.c
--- xv6-test/xv6-public/gdtinfo.c	1970-01-01 03:00:00.000000000 +0300
+++ xv6-public/gdtinfo.c	2016-12-19 00:10:31.131189999 +0300
@@ -0,0 +1,45 @@
+#include "types.h"
+#include "user.h"
+
+
+void
+print_sd_info(struct segdesc *sd)
+{
+  printf(1, "Limit: 0x%x%s\n", sd->lim_15_0 + (sd->lim_19_16 << 16), sd->g ? "000" : "");
+  printf(1, "Base addr: 0x%x\n", sd->base_15_0 + (sd->base_23_16 << 16) + (sd->base_31_24 << 24));
+  printf(1, "Type: %d\n", sd->type);
+  printf(1, "App flag: %d\n", sd->s);
+  printf(1, "DPL: %d\n", sd->dpl);
+  printf(1, "Present flag: %d\n", sd->p);
+  printf(1, "AVL flag (unused): %d\n", sd->avl);
+  printf(1, "Bit-size flag: %d-bit segment\n", sd->db ? 32 : 16);
+}
+
+
+int
+main()
+{
+  // struct segdesc gdt[NSEGS];
+  // int i;
+  // if(user(gdt))
+  // {
+  //   return -1;
+  // }
+
+  // printf(1, "Total number of segments: %d\n\n", NSEGS);
+  // for(i = 0; i < NSEGS; ++i)
+  // {
+  //   printf(1, "Segment desc #%d:\n", i);
+  //   print_sd_info(&(gdt[i]));
+  //   printf(1, "\n");
+  // }
+
+  struct segdesc sd;
+  if(user(&sd))
+    return -1;
+
+  print_sd_info(&sd);
+
+  return 0;
+}
+
Общие подкаталоги: xv6-test/xv6-public/.git и xv6-public/.git
diff -u --new-file xv6-test/xv6-public/Makefile xv6-public/Makefile
--- xv6-test/xv6-public/Makefile	2016-12-19 00:26:03.535189999 +0300
+++ xv6-public/Makefile	2016-12-18 23:15:04.123189999 +0300
@@ -173,6 +173,7 @@
 	_usertests\
 	_wc\
 	_zombie\
+	_gdtinfo\
 
 fs.img: mkfs README $(UPROGS)
 	./mkfs fs.img README $(UPROGS)
@@ -242,7 +243,7 @@
 EXTRA=\
 	mkfs.c ulib.c user.h cat.c echo.c forktest.c grep.c kill.c\
 	ln.c ls.c mkdir.c rm.c stressfs.c usertests.c wc.c zombie.c\
-	printf.c umalloc.c\
+	printf.c umalloc.c gdtinfo.c\
 	README dot-bochsrc *.pl toc.* runoff runoff1 runoff.list\
 	.gdbinit.tmpl gdbutil\
 
diff -u --new-file xv6-test/xv6-public/syscall.c xv6-public/syscall.c
--- xv6-test/xv6-public/syscall.c	2016-12-19 00:26:03.535189999 +0300
+++ xv6-public/syscall.c	2016-12-18 23:15:04.123189999 +0300
@@ -98,6 +98,7 @@
 extern int sys_wait(void);
 extern int sys_write(void);
 extern int sys_uptime(void);
+extern int sys_user(void);
 
 static int (*syscalls[])(void) = {
 [SYS_fork]    sys_fork,
@@ -121,6 +122,7 @@
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
+[SYS_user]    sys_user,
 };
 
 void
diff -u --new-file xv6-test/xv6-public/syscall.h xv6-public/syscall.h
--- xv6-test/xv6-public/syscall.h	2016-12-19 00:26:03.535189999 +0300
+++ xv6-public/syscall.h	2016-12-18 23:15:04.123189999 +0300
@@ -20,3 +20,4 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+#define SYS_user   22
diff -u --new-file xv6-test/xv6-public/sysproc.c xv6-public/sysproc.c
--- xv6-test/xv6-public/sysproc.c	2016-12-19 00:26:03.535189999 +0300
+++ xv6-public/sysproc.c	2016-12-19 00:10:40.047189999 +0300
@@ -89,3 +89,20 @@
   release(&tickslock);
   return xticks;
 }
+
+int
+sys_user(void)
+{
+  // struct segdesc *sds;
+  // if(argptr(0, (void*)&sds, sizeof(*sds) * NSEGS) < 0)
+  //   return -1;
+
+  // memmove(sds, cpu->gdt, sizeof(cpu->gdt));
+
+  struct segdesc *sd;
+  if(argptr(0, (void*)&sd, sizeof(*sd)) < 0)
+    return -1;
+
+  *sd = cpu->gdt[1];
+  return 0;
+}
diff -u --new-file xv6-test/xv6-public/user.h xv6-public/user.h
--- xv6-test/xv6-public/user.h	2016-12-19 00:26:03.535189999 +0300
+++ xv6-public/user.h	2016-12-18 23:59:14.971189999 +0300
@@ -1,3 +1,5 @@
+#include "mmu.h"
+
 struct stat;
 struct rtcdate;
 
@@ -23,6 +25,7 @@
 char* sbrk(int);
 int sleep(int);
 int uptime(void);
+int user(struct segdesc*);
 
 // ulib.c
 int stat(char*, struct stat*);
diff -u --new-file xv6-test/xv6-public/usys.S xv6-public/usys.S
--- xv6-test/xv6-public/usys.S	2016-12-19 00:26:03.535189999 +0300
+++ xv6-public/usys.S	2016-12-18 23:15:04.123189999 +0300
@@ -29,3 +29,4 @@
 SYSCALL(sbrk)
 SYSCALL(sleep)
 SYSCALL(uptime)
+SYSCALL(user)
