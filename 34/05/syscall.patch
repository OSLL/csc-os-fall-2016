diff --git a/Makefile b/Makefile
index 93d525a..43f91cb 100644
--- a/Makefile
+++ b/Makefile
@@ -172,7 +172,8 @@ UPROGS=\
    _stressfs\
    _usertests\
    _wc\
-   _zombie\
+    _zombie\
+   _gdtinfo\
 
 fs.img: mkfs README $(UPROGS)
    ./mkfs fs.img README $(UPROGS)
@@ -243,6 +244,7 @@ EXTRA=\
    mkfs.c ulib.c user.h cat.c echo.c forktest.c grep.c kill.c\
    ln.c ls.c mkdir.c rm.c stressfs.c usertests.c wc.c zombie.c\
    printf.c umalloc.c\
+   gdtinfo.c\
    README dot-bochsrc *.pl toc.* runoff runoff1 runoff.list\
    .gdbinit.tmpl gdbutil\
 
diff --git a/gdtinfo.c b/gdtinfo.c
new file mode 100644
index 0000000..53c738a
--- /dev/null
+++ b/gdtinfo.c
@@ -0,0 +1,25 @@
+#include "types.h"
+#include "user.h"
+
+int
+main()
+{
+    struct segdesc gdt;
+    user(&gdt);
+
+    printf(1, "gdt\n");
+    printf(1, "lim_15_0: %d\n",   gdt.lim_15_0);
+    printf(1, "base_15_0: %d\n",  gdt.base_15_0);
+    printf(1, "type: %d\n",       gdt.type);
+    printf(1, "s: %d\n",          gdt.s);
+    printf(1, "dpl: %d\n",        gdt.dpl);
+    printf(1, "p: %d\n",          gdt.p);
+    printf(1, "lim_19_16: %d\n",  gdt.lim_19_16);
+    printf(1, "avl: %d\n",        gdt.avl);
+    printf(1, "rsv1: %d\n",       gdt.rsv1);
+    printf(1, "db: %d\n",         gdt.db);
+    printf(1, "g: %d\n",          gdt.g);
+    printf(1, "base_31_24: %d\n", gdt.base_31_24);
+
+    return 0;
+}
\ No newline at end of file
diff --git a/syscall.c b/syscall.c
index 9ae7536..8e7eb2e 100644
--- a/syscall.c
+++ b/syscall.c
@@ -98,6 +98,7 @@ extern int sys_unlink(void);
 extern int sys_wait(void);
 extern int sys_write(void);
 extern int sys_uptime(void);
+extern int sys_user(void);
 
 static int (*syscalls[])(void) = {
 [SYS_fork]    sys_fork,
@@ -121,6 +122,7 @@ static int (*syscalls[])(void) = {
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
+[SYS_user]    sys_user
 };
 
 void
diff --git a/syscall.h b/syscall.h
index bc5f356..5e5e658 100644
--- a/syscall.h
+++ b/syscall.h
@@ -20,3 +20,4 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+#define SYS_user   22
diff --git a/sysproc.c b/sysproc.c
index 6b585e0..db1e4cb 100644
--- a/sysproc.c
+++ b/sysproc.c
@@ -89,3 +89,13 @@ sys_uptime(void)
   release(&tickslock);
   return xticks;
 }
+
+int
+sys_user(void)
+{
+  struct segdesc *gdt;
+  if (argptr(0, (char**)&gdt, sizeof(gdt)) < 0) 
+    return -1;
+  *gdt = cpu->gdt[1];
+  return 0;
+}
\ No newline at end of file
diff --git a/user.h b/user.h
index f45b8d5..5b0670d 100644
--- a/user.h
+++ b/user.h
@@ -1,3 +1,5 @@
+#include "mmu.h"
+
 struct stat;
 struct rtcdate;
 
@@ -23,6 +25,7 @@ int getpid(void);
 char* sbrk(int);
 int sleep(int);
 int uptime(void);
+int user(struct segdesc*);
 
 // ulib.c
 int stat(char*, struct stat*);
diff --git a/usys.S b/usys.S
index 8bfd8a1..0cb192a 100644
--- a/usys.S
+++ b/usys.S
@@ -29,3 +29,4 @@ SYSCALL(getpid)
 SYSCALL(sbrk)
 SYSCALL(sleep)
 SYSCALL(uptime)
+SYSCALL(user)
